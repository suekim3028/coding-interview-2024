# 문제
# 가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다.
# 태일이는 이 얇은 바닥을 1 X 2의 덮개, 2 X 1의 덮개, 2 X 2의 덮개를 이용해 채우고자 한다.
# 이 때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오.
# 예를 들어, 2X3 크기의 바닥을 채우는 경우의 수는 5가지이다.

# 입력 조건
# 첫째 줄에 N이 주어진다. (1 ≤ N ≤ 1,000)

# 출력 조건
# 첫째 줄에 2 X N 크기의 바닥을 채우는 방법의 수를 796,796으로 나눈 나머지를 출력한다.

# 입력 예시
# 3

# 출력 예시
# 5
 

import datetime

# 나머지를 출력하라고 하는 경우 dp인 경우 많음

def try1():
    # 2024-01-22 00:37:24.707268
    # 2024-01-22 01:03:30.937575

    w = int(input())
    arr = [0]*w
    for i in range(w):
        if(i==0):
            arr[i] = 1
        elif(i==1):
            arr[i] = 3
        else:
            arr[i] = ((arr[i-1])+(arr[i-2]*2))%796796

    print(arr[w-1])
    return
    
print(datetime.datetime.now())
try1()